// generic example 
class Test<T> // class Test is taking one parameter as type parameter T
{
	T a,b; // two fields of type parameter T 
	Test()
	{}
	Test(T a,T b) // method of the class is taking one parameter of type T
	{
		this.a = a;
		this.b= b;
	}
	
	void disp()
	{
		System.out.println("First Value = "+this.a+" Second Value = "+this.b);
	}
}


public class Day9_7 {

	public static void main(String[] args) 
	{
		//Test tobj = new Test(); // RAW TYPE
		Test<Integer> t1 = new Test<Integer>(45);
		System.out.println("Num value = "+t1.getNum());
		Test<Float> t2 = new Test<Float>(3.2f);
		System.out.println("Num value = "+t2.getNum());
		
		Test<Double> t3 = new Test<Double>(5.4);
		System.out.println("Num value = "+t3.getNum());
		
		Test<String> t4 = new Test<String>("Sunbeam");
		System.out.println("value = "+t4.getNum());
	}

}
